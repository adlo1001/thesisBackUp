package My_Math;


/**
* My_Math/ResultHelper.java .
* Generated by the IDL-to-Java compiler (portable), version "3.1"
* from Math.idl
* jeudi 22 août 2002 19 h 49 CEST
*/

abstract public class ResultHelper
{
  private static String  _id = "IDL:My_Math/Result:1.0";

  public static void insert (org.omg.CORBA.Any a, My_Math.Result that)
  {
    org.omg.CORBA.portable.OutputStream out = a.create_output_stream ();
    a.type (type ());
    write (out, that);
    a.read_value (out.create_input_stream (), type ());
  }

  public static My_Math.Result extract (org.omg.CORBA.Any a)
  {
    return read (a.create_input_stream ());
  }

  private static org.omg.CORBA.TypeCode __typeCode = null;
  private static boolean __active = false;
  synchronized public static org.omg.CORBA.TypeCode type ()
  {
    if (__typeCode == null)
    {
      synchronized (org.omg.CORBA.TypeCode.class)
      {
        if (__typeCode == null)
        {
          if (__active)
          {
            return org.omg.CORBA.ORB.init().create_recursive_tc ( _id );
          }
          __active = true;
          org.omg.CORBA.StructMember[] _members0 = new org.omg.CORBA.StructMember [5];
          org.omg.CORBA.TypeCode _tcOf_members0 = null;
          _tcOf_members0 = org.omg.CORBA.ORB.init ().get_primitive_tc (org.omg.CORBA.TCKind.tk_float);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().create_array_tc (My_Math.SIZE_MAX.value, _tcOf_members0 );
          _tcOf_members0 = org.omg.CORBA.ORB.init ().create_array_tc (My_Math.SIZE_MAX.value, _tcOf_members0 );
          _members0[0] = new org.omg.CORBA.StructMember (
            "result",
            _tcOf_members0,
            null);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().get_primitive_tc (org.omg.CORBA.TCKind.tk_long);
          _members0[1] = new org.omg.CORBA.StructMember (
            "line_result",
            _tcOf_members0,
            null);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().get_primitive_tc (org.omg.CORBA.TCKind.tk_long);
          _members0[2] = new org.omg.CORBA.StructMember (
            "row_result",
            _tcOf_members0,
            null);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().create_string_tc (0);
          _members0[3] = new org.omg.CORBA.StructMember (
            "msg",
            _tcOf_members0,
            null);
          _tcOf_members0 = org.omg.CORBA.ORB.init ().create_string_tc (0);
          _members0[4] = new org.omg.CORBA.StructMember (
            "e",
            _tcOf_members0,
            null);
          __typeCode = org.omg.CORBA.ORB.init ().create_struct_tc (My_Math.ResultHelper.id (), "Result", _members0);
          __active = false;
        }
      }
    }
    return __typeCode;
  }

  public static String id ()
  {
    return _id;
  }

  public static My_Math.Result read (org.omg.CORBA.portable.InputStream istream)
  {
    My_Math.Result value = new My_Math.Result ();
    value.result = new float[My_Math.SIZE_MAX.value][];
    for (int _o0 = 0;_o0 < (My_Math.SIZE_MAX.value); ++_o0)
    {
      value.result[_o0] = new float[My_Math.SIZE_MAX.value];
      for (int _o1 = 0;_o1 < (My_Math.SIZE_MAX.value); ++_o1)
      {
        value.result[_o0][_o1] = istream.read_float ();
      }
    }
    value.line_result = istream.read_long ();
    value.row_result = istream.read_long ();
    value.msg = istream.read_string ();
    value.e = istream.read_string ();
    return value;
  }

  public static void write (org.omg.CORBA.portable.OutputStream ostream, My_Math.Result value)
  {
    if (value.result.length != (My_Math.SIZE_MAX.value))
      throw new org.omg.CORBA.MARSHAL (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    for (int _i0 = 0;_i0 < (My_Math.SIZE_MAX.value); ++_i0)
    {
      if (value.result[_i0].length != (My_Math.SIZE_MAX.value))
        throw new org.omg.CORBA.MARSHAL (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
      for (int _i1 = 0;_i1 < (My_Math.SIZE_MAX.value); ++_i1)
      {
        ostream.write_float (value.result[_i0][_i1]);
      }
    }
    ostream.write_long (value.line_result);
    ostream.write_long (value.row_result);
    ostream.write_string (value.msg);
    ostream.write_string (value.e);
  }

}
