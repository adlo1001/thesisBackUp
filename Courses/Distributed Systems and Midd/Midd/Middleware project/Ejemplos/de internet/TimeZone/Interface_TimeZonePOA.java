package TimeZone;


/**
* TimeZone/Interface_TimeZonePOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.1"
* from TimeZone.idl
* jeudi 22 août 2002 19 h 31 CEST
*/

public abstract class Interface_TimeZonePOA extends org.omg.PortableServer.Servant
 implements TimeZone.Interface_TimeZoneOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("get_date", new java.lang.Integer (0));
    _methods.put ("get_help", new java.lang.Integer (1));
    _methods.put ("get_ids", new java.lang.Integer (2));
    _methods.put ("get_time", new java.lang.Integer (3));
    _methods.put ("set_timezone", new java.lang.Integer (4));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // TimeZone/Interface_TimeZone/get_date
       {
         String $result = null;
         $result = this.get_date ();
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 1:  // TimeZone/Interface_TimeZone/get_help
       {
         String $result = null;
         $result = this.get_help ();
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 2:  // TimeZone/Interface_TimeZone/get_ids
       {
         String $result = null;
         $result = this.get_ids ();
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 3:  // TimeZone/Interface_TimeZone/get_time
       {
         String $result = null;
         $result = this.get_time ();
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 4:  // TimeZone/Interface_TimeZone/set_timezone
       {
         String timezone = in.read_string ();
         String $result = null;
         $result = this.set_timezone (timezone);
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:TimeZone/Interface_TimeZone:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public Interface_TimeZone _this() 
  {
    return Interface_TimeZoneHelper.narrow(
    super._this_object());
  }

  public Interface_TimeZone _this(org.omg.CORBA.ORB orb) 
  {
    return Interface_TimeZoneHelper.narrow(
    super._this_object(orb));
  }


} // class Interface_TimeZonePOA
