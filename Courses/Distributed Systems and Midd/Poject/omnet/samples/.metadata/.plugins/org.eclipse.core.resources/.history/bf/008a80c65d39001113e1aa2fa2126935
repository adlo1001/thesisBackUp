//
// Generated file, do not edit! Created by opp_msgc 4.2 from appPacket.msg.
//

#ifndef _APPPACKET_M_H_
#define _APPPACKET_M_H_

#include <omnetpp.h>

// opp_msgc version check
#define MSGC_VERSION 0x0402
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of opp_msgc: 'make clean' should help.
#endif



/**
 * Enum generated from <tt>appPacket.msg</tt> by opp_msgc.
 * <pre>
 * enum DSP2_APPLICATION_MESSAGE_TYPES{
 * 	DSP2_CLIENT_PUBLISH_MESSAGE = 0;
 * 	DSP2_CLIENT_SUBSCRIBE_MESSAGE = 1;
 * 	DSP2_CLIENT_UNSUBSCRIBE_MESSAGE = 2;
 * 	DSP2_BROKER_CONNECT_MESSAGE = 3;
 * 	DSP2_BROKER_NET_UPDATE_MESSAGE = 4;
 * 	DSP2_BROKER_NOT_READY_MESSAGE = 5;
 * 	DSP2_PUBLISHED_CONTENT_MESSAGE = 6;
 * };
 * </pre>
 */
enum DSP2_APPLICATION_MESSAGE_TYPES {
    DSP2_CLIENT_PUBLISH_MESSAGE = 0,
    DSP2_CLIENT_SUBSCRIBE_MESSAGE = 1,
    DSP2_CLIENT_UNSUBSCRIBE_MESSAGE = 2,
    DSP2_BROKER_CONNECT_MESSAGE = 3,
    DSP2_BROKER_NET_UPDATE_MESSAGE = 4,
    DSP2_BROKER_NOT_READY_MESSAGE = 5,
    DSP2_PUBLISHED_CONTENT_MESSAGE = 6
};

/**
 * Class generated from <tt>appPacket.msg</tt> by opp_msgc.
 * <pre>
 * packet AppPacket {
 *     int pktType @enum(DSP2_APPLICATION_MESSAGE_TYPES);
 *     int srcAddress;
 *     int destAddress;
 *     
 *     int originator;
 *     string topic;
 *     string content;
 *     
 *     int topologyIdx;
 *     int connectedBrokers[];
 * }
 * </pre>
 */
class AppPacket : public ::cPacket
{
  protected:
    int pktType_var;
    int srcAddress_var;
    int destAddress_var;
    int originator_var;
    opp_string topic_var;
    opp_string content_var;
    int topologyIdx_var;
    int *connectedBrokers_var; // array ptr
    unsigned int connectedBrokers_arraysize;

  private:
    void copy(const AppPacket& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const AppPacket&);

  public:
    AppPacket(const char *name=NULL, int kind=0);
    AppPacket(const AppPacket& other);
    virtual ~AppPacket();
    AppPacket& operator=(const AppPacket& other);
    virtual AppPacket *dup() const {return new AppPacket(*this);}
    virtual void parsimPack(cCommBuffer *b);
    virtual void parsimUnpack(cCommBuffer *b);

    // field getter/setter methods
    virtual int getPktType() const;
    virtual void setPktType(int pktType);
    virtual int getSrcAddress() const;
    virtual void setSrcAddress(int srcAddress);
    virtual int getDestAddress() const;
    virtual void setDestAddress(int destAddress);
    virtual int getOriginator() const;
    virtual void setOriginator(int originator);
    virtual const char * getTopic() const;
    virtual void setTopic(const char * topic);
    virtual const char * getContent() const;
    virtual void setContent(const char * content);
    virtual int getTopologyIdx() const;
    virtual void setTopologyIdx(int topologyIdx);
    virtual void setConnectedBrokersArraySize(unsigned int size);
    virtual unsigned int getConnectedBrokersArraySize() const;
    virtual int getConnectedBrokers(unsigned int k) const;
    virtual void setConnectedBrokers(unsigned int k, int connectedBrokers);
};

inline void doPacking(cCommBuffer *b, AppPacket& obj) {obj.parsimPack(b);}
inline void doUnpacking(cCommBuffer *b, AppPacket& obj) {obj.parsimUnpack(b);}


#endif // _APPPACKET_M_H_
